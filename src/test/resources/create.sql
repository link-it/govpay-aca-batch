CREATE TABLE IF NOT EXISTS applicazioni
(
	cod_applicazione VARCHAR(35) NOT NULL,
	auto_iuv BOOLEAN NOT NULL,
	firma_ricevuta VARCHAR(1) NOT NULL,
	cod_connettore_integrazione VARCHAR(255),
	trusted BOOLEAN NOT NULL,
	cod_applicazione_iuv VARCHAR(3),
	reg_exp VARCHAR(1024),
	-- fk/pk columns
	id BIGINT,
	-- id BIGINT GENERATED BY DEFAULT AS SEQUENCE seq_applicazioni,
	principal VARCHAR(4000) NOT NULL,
	-- unique constraints
	CONSTRAINT unique_applicazioni_1 UNIQUE (cod_applicazione),
	CONSTRAINT unique_applicazioni_2 UNIQUE (principal),
	-- fk/pk keys constraints
	CONSTRAINT pk_applicazioni PRIMARY KEY (id)
);

-- index
CREATE UNIQUE INDEX IF NOT EXISTS index_applicazioni_1 ON applicazioni (cod_applicazione);
CREATE UNIQUE INDEX IF NOT EXISTS index_applicazioni_2 ON applicazioni (principal);

CREATE TABLE IF NOT EXISTS domini
(
	cod_dominio VARCHAR(35) NOT NULL,
	gln VARCHAR(35),
	abilitato BOOLEAN NOT NULL,
	ragione_sociale VARCHAR(70) NOT NULL,
	aux_digit INT NOT NULL,
	iuv_prefix VARCHAR(255),
	segregation_code INT,
	logo VARBINARY(16777215),
	cbill VARCHAR(255),
	aut_stampa_poste VARCHAR(255),
	intermediato BOOLEAN NOT NULL,
	tassonomia_pago_pa VARCHAR(35),
	-- fk/pk columns
	id BIGINT,
	-- id BIGINT GENERATED BY DEFAULT AS SEQUENCE seq_domini,
	id_stazione BIGINT,
	id_applicazione_default BIGINT,
	-- unique constraints
	CONSTRAINT unique_domini_1 UNIQUE (cod_dominio),
	-- fk/pk keys constraints
	CONSTRAINT fk_dom_id_applicazione_default FOREIGN KEY (id_applicazione_default) REFERENCES applicazioni(id),
	CONSTRAINT pk_domini PRIMARY KEY (id)
);

-- index
CREATE UNIQUE INDEX IF NOT EXISTS index_domini_1 ON domini (cod_dominio);
ALTER TABLE domini ALTER COLUMN aux_digit SET DEFAULT 0;

CREATE TABLE IF NOT EXISTS versamenti
(
	cod_versamento_ente VARCHAR(35) NOT NULL,
	importo_totale DOUBLE NOT NULL,
	stato_versamento VARCHAR(35) NOT NULL,
	data_creazione TIMESTAMP NOT NULL,
	data_validita TIMESTAMP,
	data_scadenza TIMESTAMP,
	causale_versamento VARCHAR(1024),
	debitore_tipo VARCHAR(1),
	debitore_identificativo VARCHAR(35) NOT NULL,
	debitore_anagrafica VARCHAR(70) NOT NULL,
	iuv_versamento VARCHAR(35),
	numero_avviso VARCHAR(35),
	data_ultima_modifica_aca TIMESTAMP,
	data_ultima_comunicazione_aca TIMESTAMP,
	-- fk/pk columns
	id BIGINT,
	id_dominio BIGINT NOT NULL,
	id_applicazione BIGINT NOT NULL,
	-- unique constraints
	CONSTRAINT unique_versamenti_1 UNIQUE (cod_versamento_ente,id_applicazione),
	-- fk/pk keys constraints
	CONSTRAINT fk_vrs_id_dominio FOREIGN KEY (id_dominio) REFERENCES domini(id),
	CONSTRAINT fk_vrs_id_applicazione FOREIGN KEY (id_applicazione) REFERENCES applicazioni(id),
	CONSTRAINT pk_versamenti PRIMARY KEY (id)
);

-- index
CREATE INDEX IF NOT EXISTS idx_vrs_id_pendenza ON versamenti (cod_versamento_ente,id_applicazione);
CREATE INDEX IF NOT EXISTS idx_vrs_data_creaz ON versamenti (data_creazione DESC);
CREATE INDEX IF NOT EXISTS idx_vrs_stato_vrs ON versamenti (stato_versamento);
CREATE INDEX IF NOT EXISTS idx_vrs_sped_aca ON versamenti (data_ultima_modifica_aca DESC,data_ultima_comunicazione_aca DESC);


CREATE VIEW IF NOT EXISTS v_versamenti_aca AS 
SELECT versamenti.id,
    versamenti.cod_versamento_ente,
    versamenti.importo_totale,
    versamenti.stato_versamento,
    versamenti.data_validita,
    versamenti.data_scadenza,
    versamenti.causale_versamento,
    versamenti.debitore_identificativo,
    versamenti.debitore_tipo,
    versamenti.debitore_anagrafica,
    versamenti.iuv_versamento,
    versamenti.numero_avviso,
    applicazioni.cod_applicazione AS cod_applicazione,
    domini.cod_dominio AS cod_dominio,
    versamenti.data_ultima_modifica_aca,
    versamenti.data_ultima_comunicazione_aca
    FROM versamenti 
	JOIN domini ON versamenti.id_dominio = domini.id 
	JOIN applicazioni ON versamenti.id_applicazione = applicazioni.id
    WHERE versamenti.data_ultima_comunicazione_aca < versamenti.data_ultima_modifica_aca;
    
    
    
    
    
    
    
    